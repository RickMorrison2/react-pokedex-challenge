{"version":3,"sources":["logo.svg","serviceWorker.js","Details.js","List.js","useDebounce.js","SearchAndListContainer.js","Home.js","App.js","NavItems.js","Layout.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Details","props","className","pokemon","name","num","src","img","height","width","type","length","join","weaknesses","weight","prev_evolution","map","mon","index","key","next_evolution","onClick","back","List","useState","pokemonList","setPokemonList","search","setSearch","types","setTypes","setWeaknesses","selectedPokemon","setSelectedPokemon","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","fetchedPokemonList","axios","get","then","res","console","log","data","debouncedList","filter","toLowerCase","includes","alert","renderList","id","dropdownOptions","onChange","e","searchTerm","target","options","selectedValues","onSelect","selectedTypes","forEach","filteredList","onRemove","displayValue","selectedWeakness","weakness","Container","Home","App","path","component","exact","createRoute","pathname","children","leftAddOn","undefined","parentId","itemId","to","navItems","HomeSVGIcon","SearchSVGIcon","CustomLayout","useLocation","Layout","title","navHeaderTitle","treeProps","useLayoutNavigation","Link","ReactDOM","render","Configuration","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20c6f684.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst Details = props => {\r\n    \r\n    return (\r\n        <div className=\"pokemon-box\">\r\n            <p>Name: {props.pokemon.name}</p>\r\n            <p>Num: {props.pokemon.num}</p>\r\n            <img src={props.pokemon.img} height=\"auto\" width=\"auto\" />\r\n            <p>Type: {props.pokemon.type.length > 1 ? props.pokemon.type.join(', ') : props.pokemon.type}</p>\r\n            <p>Weaknesses: {props.pokemon.weaknesses.length > 1 ? props.pokemon.weaknesses.join(', ') : props.pokemon.weaknesses}</p>\r\n            <p>Height: {props.pokemon.height}</p>\r\n            <p>Weight: {props.pokemon.weight}</p>\r\n            {props.pokemon.prev_evolution ? \r\n            <div>\r\n                <p>Previous Evolution(s):</p>\r\n                {props.pokemon.prev_evolution.map((mon, index) => {\r\n                return (<p key={index}>Name: {mon.name} / Num: {mon.num}\r\n                </p>)\r\n                })}\r\n            </div>\r\n                 : null}\r\n            {props.pokemon.next_evolution ? \r\n            <div>\r\n            <p>Next Evolution(s):</p>\r\n            {props.pokemon.next_evolution.map((mon, index) => {\r\n                return (<p key={index}>Name: {mon.name} / Num: {mon.num}\r\n                </p>)\r\n                })}\r\n            </div>\r\n             : null}\r\n            <button onClick={props.back}>Back to List</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Details;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport useDebounce from './useDebounce';\r\nimport Details from './Details';\r\n\r\nconst List = (props) => {\r\n    const [ pokemonList, setPokemonList ] = useState([]);\r\n\r\n    const [ search, setSearch ] = useState('');\r\n    const [ types, setTypes ] = useState([]);\r\n    const [ weaknesses, setWeaknesses ] = useState([]);\r\n    const [ selectedPokemon, setSelectedPokemon ] = useState();\r\n\r\n    const debouncedSearchTerm = useDebounce(search, 300);\r\n\r\n    let fetchedPokemonList = [];\r\n    useEffect(() => {\r\n        try {\r\n            axios.get(`https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json`)\r\n            .then(res => {\r\n                console.log('res.data: ', res.data);\r\n                fetchedPokemonList = res.data.pokemon;\r\n                if (debouncedSearchTerm) {\r\n                    console.log('debounced: ', debouncedSearchTerm);\r\n                    let debouncedList = fetchedPokemonList.filter(pokemon => {\r\n                        return pokemon.name.toLowerCase().includes(debouncedSearchTerm.toLowerCase())\r\n                    })\r\n                    setPokemonList(debouncedList);\r\n                } else {   \r\n                setPokemonList(fetchedPokemonList);\r\n                }\r\n            })\r\n        } catch {\r\n            alert('No data found!');\r\n            setPokemonList([]);\r\n        }\r\n    }, [debouncedSearchTerm])\r\n\r\n    const handleSearch = searchTerm => {\r\n        setSearch(searchTerm)\r\n    };\r\n\r\n    const handleFilter = selectedTypes => {\r\n        setTypes(selectedTypes)\r\n        selectedTypes.forEach(type => {\r\n            const filteredList = pokemonList.filter(pokemon => {\r\n                return pokemon.type.includes(type.value)\r\n            })\r\n        setPokemonList(filteredList);\r\n        })\r\n    };\r\n\r\n    const handleRemoveFilter = selectedTypes => {\r\n        setTypes(selectedTypes)\r\n        try {\r\n            axios.get(`https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json`)\r\n            .then(res => {\r\n                console.log('res.data: ', res.data);\r\n                fetchedPokemonList = res.data.pokemon;\r\n        if (selectedTypes.length === 0) {\r\n            setPokemonList(fetchedPokemonList)\r\n        }\r\n        selectedTypes.forEach(type => {\r\n            const filteredList = fetchedPokemonList.filter(pokemon => {\r\n                return pokemon.type.includes(type.value)\r\n            })\r\n                setPokemonList(filteredList);\r\n            })\r\n            })\r\n        } catch {\r\n            alert('No data found!');\r\n            setPokemonList([]);\r\n        }\r\n    }\r\n\r\n    const handleWeaknessFilter = selectedWeakness => {\r\n        setWeaknesses(selectedWeakness)\r\n        selectedWeakness.forEach(weakness => {\r\n            const filteredList = pokemonList.filter(pokemon => {\r\n                return pokemon.weaknesses.includes(weakness.value)\r\n            })\r\n        setPokemonList(filteredList);\r\n        })\r\n    };\r\n\r\n    const handleRemoveWeaknessFilter = selectedWeakness => {\r\n        setWeaknesses(selectedWeakness)\r\n        try {\r\n            axios.get(`https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json`)\r\n            .then(res => {\r\n                console.log('res.data: ', res.data);\r\n                fetchedPokemonList = res.data.pokemon;\r\n        if (selectedWeakness.length === 0) {\r\n            setPokemonList(fetchedPokemonList)\r\n        }\r\n        selectedWeakness.forEach(weakness => {\r\n            const filteredList = fetchedPokemonList.filter(pokemon => {\r\n                return pokemon.weaknesses.includes(weakness.value)\r\n            })\r\n                setPokemonList(filteredList);\r\n            })\r\n            })\r\n        } catch {\r\n            alert('No data found!');\r\n            setPokemonList([]);\r\n        }\r\n    }\r\n\r\n    const buttonClickedHandler = pokemon => {\r\n        setSelectedPokemon(pokemon)\r\n    }\r\n\r\n    const backToListHandler = () => {\r\n        setSelectedPokemon(null)   \r\n    }\r\n\r\n    let renderList;\r\n\r\n    if (pokemonList.length > 0) {\r\n        renderList = pokemonList.map(mon => (\r\n            <div key={mon.id} className=\"pokemon-box\">\r\n                <p>Num: {mon.num}</p> \r\n                <p>Name: {mon.name}</p> \r\n                <p>Type: {mon.type.length > 1 ? mon.type.join(', ') : mon.type}</p>\r\n                <p>Weaknesses: {mon.weaknesses.length > 1 ? mon.weaknesses.join(', ') : mon.weaknesses}</p>\r\n                <button onClick={() => buttonClickedHandler(mon)}>View Details</button>\r\n            </div>\r\n        ))\r\n    } else {\r\n        renderList = (\r\n            <div>\r\n                <p>No Pokemon Found!</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const dropdownOptions = [\r\n        {id: 1, value: 'Grass' },\r\n        {id: 2, value: 'Fire' },\r\n        {id: 3, value: 'Water' },\r\n        {id: 4, value: 'Psychic' },\r\n        {id: 5, value: 'Electric' },\r\n        {id: 6, value: 'Flying' },\r\n        {id: 7, value: 'Ice' },\r\n        {id: 8, value: 'Ground' },\r\n        {id: 9, value: 'Rock' },\r\n        {id: 10, value: 'Poison' },\r\n        {id: 11, value: 'Bug' },\r\n        {id: 12, value: 'Fighting' },\r\n        {id: 13, value: 'Normal' },\r\n        {id: 14, value: 'Dragon' },\r\n        {id: 15, value: 'Ghost' },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"flex-center-container\">\r\n            <div className=\"filters\">Search: <input onChange={e => handleSearch(e.target.value)} value={search} /></div>\r\n            <div className=\"filters\">Filter by Type:\r\n            <Multiselect options={dropdownOptions} selectedValues={types} onSelect={handleFilter} onRemove={handleRemoveFilter} displayValue=\"value\" />\r\n            </div>\r\n            <div className=\"filters\">Filter by Weaknesses: \r\n            <Multiselect options={dropdownOptions} selectedValues={weaknesses} onSelect={handleWeaknessFilter} onRemove={handleRemoveWeaknessFilter} displayValue=\"value\" />\r\n            </div>\r\n        </div>\r\n            <div className=\"flex-center-container-column\">\r\n            {selectedPokemon ? <Details pokemon={selectedPokemon} back={backToListHandler} /> : renderList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;","import { useState, useEffect } from 'react';\r\n\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [delay, value]);\r\n    return debouncedValue;\r\n}\r\n","import React from 'react';\r\nimport List from './List';\r\n\r\n\r\nconst Container = (props) => {\r\n    return (\r\n        <div>\r\n        <List />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div className=\"home-page\">\r\n            <h2>Welcome to my React Pokedex Challenge app. Please use the Navigation panel to search for Pokemon!</h2>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Container from './SearchAndListContainer';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Switch>\n          <Route path=\"/search\" component={Container} />\n          <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { LayoutNavigationItem, LayoutNavigationTree } from '@react-md/layout';\r\nimport { HomeSVGIcon, SearchSVGIcon } from '@react-md/material-icons';\r\n\r\nconst createRoute = (pathname, children, leftAddOn = undefined, parentId = null) => {\r\n    return {\r\n        itemId: pathname,\r\n        parentId,\r\n        to: pathname,\r\n        children,\r\n        leftAddOn\r\n    };\r\n}\r\n\r\nconst navItems = {\r\n    '/': createRoute('/', 'Home', <HomeSVGIcon />),\r\n    'search': createRoute('/search', 'Search/List', <SearchSVGIcon />)\r\n}\r\n\r\nexport default navItems;","import React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport App from './App';\r\nimport { Layout, useLayoutNavigation } from '@react-md/layout';\r\nimport navItems from './NavItems';\r\n\r\nconst CustomLayout = () => {\r\nconst { pathname } = useLocation();\r\n    return (\r\n    <Layout title=\"React Pokedex Challenge\" navHeaderTitle=\"Navigation\" treeProps={useLayoutNavigation(navItems, pathname, Link)}>\r\n        <App />\r\n    </Layout>\r\n    );\r\n}\r\n\r\nexport default CustomLayout;","import './index.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Link, useLocation } from 'react-router-dom'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Configuration, Layout, useLayoutNavigation } from '@react-md/layout'\nimport CustomLayout from './Layout';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Configuration>\n      <CustomLayout />\n    </Configuration>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}